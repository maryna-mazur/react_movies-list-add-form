{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","state","count","newMovie","disableButton","valuesOfMovie","Object","values","hendelSubmit","preventDefault","props","onAdd","setState","this","onSubmit","newValue","disabled","Component","App","moviesFromServer","addMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88cf8044.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { Component } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ntype State = {\n  count: number,\n  newMovie: Movie,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    count: 0,\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  disableButton = (movie: Movie) => {\n    const valuesOfMovie = Object.values(movie);\n\n    if (valuesOfMovie[0] === '' || valuesOfMovie[2] === ''\n    || valuesOfMovie[3] === '' || valuesOfMovie[4] === ''\n    || valuesOfMovie[5] === '') {\n      return true;\n    }\n\n    return false;\n  };\n\n  hendelSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.onAdd(this.state.newMovie);\n    this.setState(state => ({\n      count: state.count + 1,\n      newMovie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    }));\n  };\n\n  render() {\n    const { count, newMovie } = this.state;\n\n    return (\n      <form\n        className=\"NewMovie\"\n        key={count}\n        onSubmit={this.hendelSubmit}\n      >\n        <h2 className=\"title\">Add a movie</h2>\n\n        <TextField\n          name=\"title\"\n          label=\"Title\"\n          value={newMovie.title}\n          onChange={(newValue) => {\n            this.setState(state => ({\n              newMovie: {\n                ...state.newMovie,\n                title: newValue,\n              },\n            }));\n          }}\n          required\n        />\n\n        <TextField\n          name=\"description\"\n          label=\"Description\"\n          value={newMovie.description}\n          onChange={(newValue) => {\n            this.setState(state => ({\n              newMovie: {\n                ...state.newMovie,\n                description: newValue,\n              },\n            }));\n          }}\n        />\n\n        <TextField\n          name=\"imgUrl\"\n          label=\"Image URL\"\n          value={newMovie.imgUrl}\n          onChange={(newValue) => {\n            this.setState(state => ({\n              newMovie: {\n                ...state.newMovie,\n                imgUrl: newValue,\n              },\n            }));\n          }}\n          required\n        />\n\n        <TextField\n          name=\"imdbUrl\"\n          label=\"Imdb URL\"\n          value={newMovie.imdbUrl}\n          onChange={(newValue) => {\n            this.setState(state => ({\n              newMovie: {\n                ...state.newMovie,\n                imdbUrl: newValue,\n              },\n            }));\n          }}\n          required\n        />\n\n        <TextField\n          name=\"imdbId\"\n          label=\"Imdb ID\"\n          value={newMovie.imdbId}\n          onChange={(newValue) => {\n            this.setState(state => ({\n              newMovie: {\n                ...state.newMovie,\n                imdbId: newValue,\n              },\n            }));\n          }}\n          required\n        />\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              data-cy=\"submit-button\"\n              className=\"button is-link\"\n              disabled={this.disableButton(newMovie)}\n            >\n              Add\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\ntype State = {\n  movies : Movie[],\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovies = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovies}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}